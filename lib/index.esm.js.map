{"mappings":"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","sources":["<anon>","src/index.ts","src/honeymate.ts","src/constants.ts","src/expose-observer.ts","src/registry.ts","src/element/element.ts","src/element/spinner.ts","src/element/collect.ts","src/animation.ts","src/types.ts","src/utils.ts","src/element/params.ts"],"sourcesContent":["const $55f2ecb58225d6c7$export$addbe116538b3a81 = \"honey\";\nconst $55f2ecb58225d6c7$export$53ca4621bbab9a = \"__visible\";\n\n\nclass $246fbb55d9950158$export$f38e328102e06d7a {\n    constructor(registry, rootMargin = \"-2%\"){\n        this.rootMargin = rootMargin;\n        const callback = (entries)=>{\n            entries.forEach((entry)=>{\n                const element = registry.getElement(entry.target);\n                if (entry.isIntersecting && !element.visible) element.show().then(()=>{});\n            });\n        };\n        this.observer = new IntersectionObserver(callback, {\n            rootMargin: this.rootMargin,\n            threshold: 0.05\n        });\n    }\n    clear() {\n        this.observer.disconnect();\n    }\n    add(element) {\n        this.observer.observe(element.node);\n    }\n}\n\n\nfunction $5d01392e25f70b57$export$a4d9bdde3e6e7b9f(size) {\n    return `<svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" style=\"animation: honeySpin 1.7s linear infinite\"><circle cx=\"50\" cy=\"50\" fill=\"none\" stroke=\"var(--honey-spinner)\" stroke-width=\"10\" r=\"35\" stroke-dasharray=\"90 60\"></circle></svg>`;\n}\nfunction $5d01392e25f70b57$export$d63a6b7859608045(node, style) {\n    const keys = Object.keys(style);\n    for(let i = 0; i < keys.length; i++){\n        const key = keys[i];\n        node.style[key] = style[key];\n    }\n}\nfunction $5d01392e25f70b57$export$609ba3dac70bb9e6(element) {\n    const spinNode = document.createElement(\"div\");\n    spinNode.className = \"honey-spin\";\n    spinNode.innerHTML = $5d01392e25f70b57$export$a4d9bdde3e6e7b9f(element.params.spinSize);\n    const doc = document.documentElement;\n    const rect = element.node.getBoundingClientRect();\n    $5d01392e25f70b57$export$d63a6b7859608045(spinNode, {\n        position: \"absolute\",\n        top: `${rect.top + doc.scrollTop}px`,\n        left: `${rect.left + doc.scrollLeft}px`,\n        width: `${rect.width}px`,\n        height: `${rect.height}px`,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        transition: \"opacity .23s ease-out\"\n    });\n    document.body.appendChild(spinNode);\n    setTimeout(()=>{\n        spinNode.style.opacity = \"1\";\n    }, 50);\n    return spinNode;\n}\nfunction $5d01392e25f70b57$export$a22167e2c2916132(node) {\n    requestAnimationFrame(()=>{\n        node.style.opacity = \"0\";\n        setTimeout(()=>{\n            document.body.removeChild(node);\n        }, 300);\n    });\n}\n\n\nconst $ad0cfced2ca048cc$var$CSS_URL_RE = /url\\(\\s*(['\"]?)(.*)\\1\\s*\\)/;\n/**\n * Attempts to retrieve a URL from a CSS property value.\n * If no URL is found, returns `undefined`\n */ function $ad0cfced2ca048cc$var$getUrl(value) {\n    if (!value || value === \"\") return;\n    const url = value.match($ad0cfced2ca048cc$var$CSS_URL_RE);\n    if (url !== null) return url[2];\n    return undefined;\n}\n/**\n * Attempts to retrieve a background image from a HTML node.\n * If no image is found, returns `undefined`\n */ function $ad0cfced2ca048cc$var$getBackgroundImage(node) {\n    const style = getComputedStyle(node);\n    const props = [\n        style.background,\n        style.backgroundImage\n    ];\n    for(let i = 0; i < props.length; i++){\n        const url = $ad0cfced2ca048cc$var$getUrl(props[i]);\n        if (url) return url;\n    }\n    return undefined;\n}\nfunction $ad0cfced2ca048cc$export$f3268a7172643da5(target) {\n    const images = [];\n    const nodes = Array.from(target.querySelectorAll(\"*\"));\n    nodes.push(target);\n    for(let i = 0; i < nodes.length; i++)if (nodes[i]?.tagName === \"IMG\") images.push(nodes[i].src);\n    else {\n        const url = $ad0cfced2ca048cc$var$getBackgroundImage(nodes[i]);\n        if (url) images.push(url);\n    }\n    return images;\n}\n\n\nvar $52295b791b26e783$export$67ee29bab3792d4c;\n(function(AnimationDirection) {\n    AnimationDirection[\"top\"] = \"top\";\n    AnimationDirection[\"right\"] = \"right\";\n    AnimationDirection[\"bottom\"] = \"bottom\";\n    AnimationDirection[\"left\"] = \"left\";\n})($52295b791b26e783$export$67ee29bab3792d4c || ($52295b791b26e783$export$67ee29bab3792d4c = {}));\n\n\n/**\n * Generates CSS transform string for slide transition\n */ function $6fd05725f893a9c2$var$formatTranslate(direction, offset) {\n    let transformString = direction === (0, $52295b791b26e783$export$67ee29bab3792d4c).top || direction === (0, $52295b791b26e783$export$67ee29bab3792d4c).bottom ? \"Y\" : \"X\";\n    transformString += direction === (0, $52295b791b26e783$export$67ee29bab3792d4c).left || direction === (0, $52295b791b26e783$export$67ee29bab3792d4c).top ? \"(-\" : \"(\";\n    return `translate${transformString}${offset}px)`;\n}\nfunction $6fd05725f893a9c2$export$86bdb2b9e42f41bc(params) {\n    let easing;\n    const frameFrom = {\n        opacity: \"0\"\n    };\n    const frameTo = {\n        opacity: \"1\",\n        transform: \"scale(1) scaleY(1) scaleX(1) rotate(0deg)\"\n    };\n    switch(params.effect){\n        case \"zoom\":\n            frameFrom.transform = `scale(${params.scale})`;\n            easing = \"cubic-bezier(0,.7,.3,1)\";\n            break;\n        case \"helix\":\n            frameFrom.transform = `scale(${params.scale}) rotate(90deg)`;\n            easing = \"cubic-bezier(0,.75,.25,1)\";\n            break;\n        case \"relax\":\n            frameFrom.transform = `scaleY(${params.scale})`;\n            frameFrom.transformOrigin = params.origin;\n            frameTo.transformOrigin = params.origin;\n            easing = \"cubic-bezier(0,0,0,1)\";\n            break;\n        default:\n            frameFrom.transform = $6fd05725f893a9c2$var$formatTranslate(params.direction, params.offset);\n            frameFrom.transformOrigin = params.origin;\n            frameTo.transformOrigin = params.origin;\n            easing = \"cubic-bezier(0,.9,.1,1)\";\n            break;\n    }\n    return [\n        [\n            frameFrom,\n            frameTo\n        ],\n        {\n            easing: easing,\n            duration: params.duration,\n            iterations: 1\n        }\n    ];\n}\n\n\n/**\n * Checks if image is loaded\n */ async function $fc7df41ca676b6cd$export$f74e931a0704c83b(url) {\n    return await new Promise((resolve)=>{\n        const image = new Image();\n        image.onload = ()=>{\n            resolve(true);\n        };\n        image.onerror = ()=>{\n            resolve(false);\n        };\n        image.src = url;\n    });\n}\nasync function $fc7df41ca676b6cd$export$e772c8ff12451969(ms) {\n    await new Promise((resolve)=>setTimeout(resolve, ms));\n}\n\n\n\nfunction $ddc2cd96f657353f$var$directionFromData(data) {\n    if (data.left) return (0, $52295b791b26e783$export$67ee29bab3792d4c).left;\n    else if (data.right) return (0, $52295b791b26e783$export$67ee29bab3792d4c).right;\n    else if (data.bottom) return (0, $52295b791b26e783$export$67ee29bab3792d4c).bottom;\n    else return (0, $52295b791b26e783$export$67ee29bab3792d4c).top;\n}\nconst $ddc2cd96f657353f$var$supportsExpose = \"IntersectionObserver\" in window;\nfunction $ddc2cd96f657353f$var$safeParseInt(value, fallback = 0) {\n    if (!value) return fallback;\n    return parseInt(value, 10);\n}\nfunction $ddc2cd96f657353f$var$safeParseFloat(value, fallback = 0) {\n    if (!value) return fallback;\n    return parseFloat(value);\n}\nfunction $ddc2cd96f657353f$var$offsetFromData(data, fallback) {\n    if (data.up) return $ddc2cd96f657353f$var$safeParseInt(data.up);\n    else if (data.left) return $ddc2cd96f657353f$var$safeParseInt(data.left);\n    else if (data.right) return $ddc2cd96f657353f$var$safeParseInt(data.right);\n    else if (data.bottom) return $ddc2cd96f657353f$var$safeParseInt(data.bottom);\n    else return fallback;\n}\nfunction $ddc2cd96f657353f$var$isPropertyExists(data, propName) {\n    return data.hasOwnProperty(propName);\n}\nfunction $ddc2cd96f657353f$export$18a3baf6b8d7ccc5(data) {\n    return {\n        // Appearance\n        effect: data.effect ? data.effect : \"slide\",\n        direction: $ddc2cd96f657353f$var$directionFromData(data),\n        origin: data.origin ? data.origin : (0, $52295b791b26e783$export$67ee29bab3792d4c).top,\n        scale: $ddc2cd96f657353f$var$safeParseFloat(data.scale, 0.87),\n        offset: $ddc2cd96f657353f$var$offsetFromData(data, 32),\n        // Timings\n        duration: $ddc2cd96f657353f$var$safeParseInt(data.duration, 640),\n        delay: $ddc2cd96f657353f$var$safeParseInt(data.delay, 0),\n        // Awaits\n        expose: $ddc2cd96f657353f$var$supportsExpose && $ddc2cd96f657353f$var$isPropertyExists(data, \"expose\"),\n        await: data.await ?? \"\",\n        continue: $ddc2cd96f657353f$var$isPropertyExists(data, \"continue\"),\n        // Spinner\n        spin: $ddc2cd96f657353f$var$isPropertyExists(data, \"spin\"),\n        spinSize: $ddc2cd96f657353f$var$safeParseInt(data.spinSize, 24)\n    };\n}\n\n\n\nvar $2b39f1b2c2ebbf14$var$ElementState;\n(function(ElementState) {\n    ElementState[ElementState[\"Hidden\"] = 0] = \"Hidden\";\n    ElementState[ElementState[\"Exposing\"] = 1] = \"Exposing\";\n    ElementState[ElementState[\"Exposed\"] = 2] = \"Exposed\";\n})($2b39f1b2c2ebbf14$var$ElementState || ($2b39f1b2c2ebbf14$var$ElementState = {}));\nclass $2b39f1b2c2ebbf14$export$8e88a0ad50abe74 {\n    constructor(node){\n        this.node = node;\n        this.images = [];\n        this.state = $2b39f1b2c2ebbf14$var$ElementState.Hidden;\n        this.params = (0, $ddc2cd96f657353f$export$18a3baf6b8d7ccc5)(node.dataset);\n        this.images = (0, $ad0cfced2ca048cc$export$f3268a7172643da5)(node);\n    }\n    setAwaited(el) {\n        this.awaitedElement = el;\n    }\n    get visible() {\n        return this.state !== $2b39f1b2c2ebbf14$var$ElementState.Hidden;\n    }\n    async ready() {\n        if (this.awaitedElement) await this.awaitedElement.whenVisible();\n        await this.imagesLoaded();\n        if (this.params.delay > 0) await (0, $fc7df41ca676b6cd$export$e772c8ff12451969)(this.params.delay);\n    }\n    async whenVisible() {\n        while(!this.visible)await (0, $fc7df41ca676b6cd$export$e772c8ff12451969)(10);\n    }\n    async imagesLoaded() {\n        const requests = this.images.map((0, $fc7df41ca676b6cd$export$f74e931a0704c83b));\n        const loaded = await Promise.all(requests);\n        return !loaded.some((v)=>!v);\n    }\n    hide() {\n        this.node.classList.remove((0, $55f2ecb58225d6c7$export$53ca4621bbab9a));\n        this.state = $2b39f1b2c2ebbf14$var$ElementState.Hidden;\n    }\n    showSpinner() {\n        this.spinner = (0, $5d01392e25f70b57$export$609ba3dac70bb9e6)(this);\n    }\n    async show() {\n        if (this.visible) return;\n        this.state = $2b39f1b2c2ebbf14$var$ElementState.Exposing;\n        if (this.spinner) (0, $5d01392e25f70b57$export$a22167e2c2916132)(this.spinner);\n        const [frames, options] = (0, $6fd05725f893a9c2$export$86bdb2b9e42f41bc)(this.params);\n        const animation = this.node.animate(frames, options);\n        await animation.finished;\n        this.node.classList.add((0, $55f2ecb58225d6c7$export$53ca4621bbab9a));\n        this.state = $2b39f1b2c2ebbf14$var$ElementState.Exposed;\n    }\n}\n\n\nclass $69a23951c84388c5$export$a0d03469ef0f42aa {\n    has(node) {\n        return this.storage.has(node);\n    }\n    clear() {\n        this.storage.clear();\n    }\n    /**\n   * Returns a HoneyElement from an HTMLElement.\n   * If the node is not in the registry, it will create and return an entry\n   */ getElement(node) {\n        if (this.storage.has(node)) return this.storage.get(node);\n        const element = new (0, $2b39f1b2c2ebbf14$export$8e88a0ad50abe74)(node);\n        this.storage.set(node, element);\n        return element;\n    }\n    getAwaited(el) {\n        if (el.params.continue) {\n            if (this.storage.size > 0) return this.getByIndex(this.storage.size - 2);\n            else return undefined;\n        } else if (el.params.await) {\n            const node = document.getElementById(el.params.await);\n            return node ? this.getElement(node) : undefined;\n        }\n        return undefined;\n    }\n    get size() {\n        return this.storage.size;\n    }\n    getByIndex(i) {\n        const node = Array.from(this.storage.keys())[i];\n        return this.storage.get(node);\n    }\n    add(node) {\n        if (this.storage.has(node)) throw new Error(\"Element already exists\");\n        const element = new (0, $2b39f1b2c2ebbf14$export$8e88a0ad50abe74)(node);\n        this.storage.set(node, element);\n        return element;\n    }\n    constructor(){\n        this.storage = new Map();\n    }\n}\n\n\nconst $8e7affb4d39ee142$var$registry = new (0, $69a23951c84388c5$export$a0d03469ef0f42aa)();\nconst $8e7affb4d39ee142$var$observer = new (0, $246fbb55d9950158$export$f38e328102e06d7a)($8e7affb4d39ee142$var$registry);\nfunction $8e7affb4d39ee142$export$e3607ec2d7a891c4(target = document, prepareParams) {\n    const nodes = Array.from(target.querySelectorAll(`.${(0, $55f2ecb58225d6c7$export$addbe116538b3a81)}:not(.${(0, $55f2ecb58225d6c7$export$53ca4621bbab9a)})`));\n    const observer = new (0, $246fbb55d9950158$export$f38e328102e06d7a)($8e7affb4d39ee142$var$registry);\n    const animations = nodes.map((node)=>{\n        const element = $8e7affb4d39ee142$var$registry.getElement(node);\n        if (prepareParams) element.params = prepareParams(element.params);\n        if (element.params.spin) element.showSpinner();\n        const previous = $8e7affb4d39ee142$var$registry.getAwaited(element);\n        if (previous) element.setAwaited(previous);\n        if (element.params.expose) return element.ready().then(()=>observer.add(element));\n        return element.ready().then(()=>element.show());\n    });\n    return Promise.all(animations);\n}\nfunction $8e7affb4d39ee142$export$aad8462122ac592b(target = document) {\n    const nodes = target.querySelectorAll(`.${(0, $55f2ecb58225d6c7$export$addbe116538b3a81)}.${(0, $55f2ecb58225d6c7$export$53ca4621bbab9a)}`);\n    nodes.forEach((node)=>{\n        node.classList.remove((0, $55f2ecb58225d6c7$export$53ca4621bbab9a));\n    });\n    const spins = document.querySelectorAll(\".honey-spin\");\n    spins.forEach((spin)=>document.body.removeChild(spin));\n    $8e7affb4d39ee142$var$registry.clear();\n    $8e7affb4d39ee142$var$observer.clear();\n}\n\n\n\n\nexport {$8e7affb4d39ee142$export$e3607ec2d7a891c4 as animate, $8e7affb4d39ee142$export$aad8462122ac592b as reset};\n//# sourceMappingURL=index.esm.js.map\n","export { animate, reset } from './honeymate'\nexport type { AnimationParams } from './types'\n","import { CLASS_MAIN, CLASS_VISIBLE } from './constants'\nimport { ExposeObserver } from './expose-observer'\nimport { HoneyRegistry } from './registry'\nimport { type ParamsBuilder } from './types'\n\nconst registry = new HoneyRegistry()\nconst observer = new ExposeObserver(registry)\n\nexport function animate (target: ParentNode = document, prepareParams?: ParamsBuilder): Promise<unknown> {\n  const nodes = Array.from(\n    target.querySelectorAll(`.${CLASS_MAIN}:not(.${CLASS_VISIBLE})`)\n  )\n  const observer = new ExposeObserver(registry)\n  const animations = nodes.map(node => {\n    const element = registry.getElement(node as HTMLElement)\n    if (prepareParams) {\n      element.params = prepareParams(element.params)\n    }\n    if (element.params.spin) {\n      element.showSpinner()\n    }\n    const previous = registry.getAwaited(element)\n    if (previous) {\n      element.setAwaited(previous)\n    }\n    if (element.params.expose) {\n      return element\n        .ready()\n        .then(() => observer.add(element))\n    }\n    return element\n      .ready()\n      .then(() => element.show())\n  })\n  return Promise.all(animations)\n}\n\nexport function reset (target: ParentNode = document): void {\n  const nodes = target.querySelectorAll(`.${CLASS_MAIN}.${CLASS_VISIBLE}`)\n\n  nodes.forEach((node) => {\n    node.classList.remove(CLASS_VISIBLE)\n  })\n  const spins = document.querySelectorAll<HTMLDivElement>('.honey-spin')\n  spins.forEach(spin => document.body.removeChild(spin))\n  registry.clear()\n  observer.clear()\n}\n","export const CLASS_MAIN = 'honey'\nexport const CLASS_VISIBLE = '__visible'\n","import { type HoneyElement } from './element'\nimport { type HoneyRegistry } from './registry'\n\nexport class ExposeObserver {\n  private readonly observer: IntersectionObserver\n\n  constructor (\n    registry: HoneyRegistry,\n    private readonly rootMargin = '-2%'\n  ) {\n    const callback: IntersectionObserverCallback = (entries) => {\n      entries.forEach((entry) => {\n        const element = registry.getElement(entry.target as HTMLElement)\n        if (entry.isIntersecting && !element.visible) {\n          element.show()\n            .then(() => {})\n        }\n      })\n    }\n\n    this.observer = new IntersectionObserver(callback, {\n      rootMargin: this.rootMargin,\n      threshold: 0.05\n    })\n  }\n\n  public clear (): void {\n    this.observer.disconnect()\n  }\n\n  public add (element: HoneyElement): void {\n    this.observer.observe(element.node)\n  }\n}\n","import { HoneyElement } from './element/element'\nimport { type Maybe } from './types'\n\nexport class HoneyRegistry {\n  private readonly storage = new Map<HTMLElement, HoneyElement>()\n\n  public has (node: HTMLElement): boolean {\n    return this.storage.has(node)\n  }\n\n  public clear (): void {\n    this.storage.clear()\n  }\n\n  /**\n   * Returns a HoneyElement from an HTMLElement.\n   * If the node is not in the registry, it will create and return an entry\n   */\n  public getElement (node: HTMLElement): HoneyElement {\n    if (this.storage.has(node)) {\n      return this.storage.get(node) as HoneyElement\n    }\n    const element = new HoneyElement(node)\n    this.storage.set(node, element)\n    return element\n  }\n\n  public getAwaited (el: HoneyElement): Maybe<HoneyElement> {\n    if (el.params.continue) {\n      if (this.storage.size > 0) {\n        return this.getByIndex(this.storage.size - 2)\n      } else {\n        return undefined\n      }\n    } else if (el.params.await) {\n      const node = document.getElementById(el.params.await)\n      return node ? this.getElement(node) : undefined\n    }\n    return undefined\n  }\n\n  public get size (): number {\n    return this.storage.size\n  }\n\n  public getByIndex (i: number): Maybe<HoneyElement> {\n    const node = Array.from(this.storage.keys())[i] as HTMLElement\n    return this.storage.get(node)\n  }\n\n  public add (node: HTMLElement): HoneyElement {\n    if (this.storage.has(node)) {\n      throw new Error('Element already exists')\n    }\n    const element = new HoneyElement(node)\n    this.storage.set(node, element)\n    return element\n  }\n}\n","import { generateSpinner, removeSpinner } from './spinner'\nimport type { AnimationParams, Maybe } from '../types'\nimport { collectImages } from './collect'\nimport { createAnimation } from '../animation'\nimport { imageLoaded, sleep } from '../utils'\nimport { parseDataParams } from './params'\nimport { CLASS_VISIBLE } from '../constants'\n\nenum ElementState {\n  Hidden,\n  Exposing,\n  Exposed\n}\n\nexport class HoneyElement {\n  public params: AnimationParams\n  private readonly images: string[] = []\n  private awaitedElement: Maybe<HoneyElement>\n  private spinner: Maybe<HTMLDivElement>\n  private state: ElementState = ElementState.Hidden\n\n  constructor (public readonly node: HTMLElement) {\n    this.params = parseDataParams(node.dataset)\n    this.images = collectImages(node)\n  }\n\n  public setAwaited (el: HoneyElement): void {\n    this.awaitedElement = el\n  }\n\n  public get visible (): boolean {\n    return this.state !== ElementState.Hidden\n  }\n\n  public async ready (): Promise<void> {\n    if (this.awaitedElement) {\n      await this.awaitedElement.whenVisible()\n    }\n    await this.imagesLoaded()\n    if (this.params.delay > 0) {\n      await sleep(this.params.delay)\n    }\n  }\n\n  public async whenVisible (): Promise<void> {\n    while (!this.visible) {\n      await sleep(10)\n    }\n  }\n\n  public async imagesLoaded (): Promise<boolean> {\n    const requests = this.images.map(imageLoaded)\n    const loaded = await Promise.all(requests)\n    return !loaded.some(v => !v)\n  }\n\n  public hide (): void {\n    this.node.classList.remove(CLASS_VISIBLE)\n    this.state = ElementState.Hidden\n  }\n\n  public showSpinner (): void {\n    this.spinner = generateSpinner(this)\n  }\n\n  public async show (): Promise<void> {\n    if (this.visible) {\n      return\n    }\n    this.state = ElementState.Exposing\n    if (this.spinner) {\n      removeSpinner(this.spinner)\n    }\n    const [frames, options] = createAnimation(this.params)\n    const animation = this.node.animate(frames, options)\n    await animation.finished\n    this.node.classList.add(CLASS_VISIBLE)\n    this.state = ElementState.Exposed\n  }\n}\n","import { type HoneyElement } from '.'\n\n/**\n * Generates spinner SVG string\n */\nexport function getSpinner (size: number): string {\n  return `<svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" style=\"animation: honeySpin 1.7s linear infinite\"><circle cx=\"50\" cy=\"50\" fill=\"none\" stroke=\"var(--honey-spinner)\" stroke-width=\"10\" r=\"35\" stroke-dasharray=\"90 60\"></circle></svg>`\n}\n\n/**\n * Applies CSS styles to the node\n */\nexport function applyStyle (\n  node: HTMLElement,\n  style: Partial<Record<keyof CSSStyleDeclaration, string>>\n): void {\n  const keys = Object.keys(style)\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i] as keyof CSSStyleDeclaration\n    (node.style as any)[key] = style[key]\n  }\n}\n\n/**\n * Generates spinner node in DOM\n */\nexport function generateSpinner (element: HoneyElement): HTMLDivElement {\n  const spinNode = document.createElement('div')\n  spinNode.className = 'honey-spin'\n  spinNode.innerHTML = getSpinner(\n    element.params.spinSize\n  )\n  const doc = document.documentElement\n  const rect = element.node.getBoundingClientRect()\n  applyStyle(spinNode, {\n    position: 'absolute',\n    top: `${rect.top + doc.scrollTop}px`,\n    left: `${rect.left + doc.scrollLeft}px`,\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'opacity .23s ease-out'\n  })\n  document.body.appendChild(spinNode)\n  setTimeout(() => {\n    spinNode.style.opacity = '1'\n  }, 50)\n  return spinNode\n}\n\n/**\n * Hides and removes spinner from DOM\n */\nexport function removeSpinner (node: HTMLDivElement): void {\n  requestAnimationFrame(() => {\n    node.style.opacity = '0'\n    setTimeout(() => {\n      document.body.removeChild(node)\n    }, 300)\n  })\n}\n","import { type Maybe } from '../types'\n\nconst CSS_URL_RE = /url\\(\\s*(['\"]?)(.*)\\1\\s*\\)/\n\n/**\n * Attempts to retrieve a URL from a CSS property value.\n * If no URL is found, returns `undefined`\n */\nfunction getUrl (value: Maybe<string>): Maybe<string> {\n  if (!value || value === '') {\n    return\n  }\n  const url = value.match(CSS_URL_RE)\n  if (url !== null) {\n    return url[2]\n  }\n  return undefined\n}\n\n/**\n * Attempts to retrieve a background image from a HTML node.\n * If no image is found, returns `undefined`\n */\nfunction getBackgroundImage (node: HTMLElement): Maybe<string> {\n  const style = getComputedStyle(node)\n  const props = [\n    style.background,\n    style.backgroundImage\n  ]\n  for (let i = 0; i < props.length; i++) {\n    const url = getUrl(props[i])\n    if (url) {\n      return url\n    }\n  }\n  return undefined\n}\n\nexport function collectImages (target: HTMLElement): string[] {\n  const images = []\n  const nodes: HTMLElement[] = Array.from(target.querySelectorAll('*'))\n  nodes.push(target)\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i]?.tagName === 'IMG') {\n      images.push((nodes[i] as HTMLImageElement).src)\n    } else {\n      const url = getBackgroundImage(nodes[i] as HTMLElement)\n      if (url) {\n        images.push(url)\n      }\n    }\n  }\n  return images\n}\n","import { AnimationDirection, type AnimationParams } from './types'\n\n/**\n * Generates CSS transform string for slide transition\n */\nfunction formatTranslate (direction: AnimationDirection, offset: number): string {\n  let transformString =\n    direction === AnimationDirection.top ||\n    direction === AnimationDirection.bottom\n      ? 'Y'\n      : 'X'\n  transformString += direction === AnimationDirection.left || direction === AnimationDirection.top ? '(-' : '('\n  return `translate${transformString}${offset}px)`\n}\n\nexport function createAnimation (params: AnimationParams): [Keyframe[], KeyframeAnimationOptions] {\n  let easing\n  const frameFrom: Partial<CSSStyleDeclaration> = {\n    opacity: '0'\n  }\n  const frameTo: Partial<CSSStyleDeclaration> = {\n    opacity: '1',\n    transform: 'scale(1) scaleY(1) scaleX(1) rotate(0deg)'\n  }\n  switch (params.effect) {\n    case 'zoom':\n      frameFrom.transform = `scale(${params.scale})`\n      easing = 'cubic-bezier(0,.7,.3,1)'\n      break\n    case 'helix':\n      frameFrom.transform = `scale(${params.scale}) rotate(90deg)`\n      easing = 'cubic-bezier(0,.75,.25,1)'\n      break\n    case 'relax':\n      frameFrom.transform = `scaleY(${params.scale})`\n      frameFrom.transformOrigin = params.origin\n      frameTo.transformOrigin = params.origin\n      easing = 'cubic-bezier(0,0,0,1)'\n      break\n    default:\n      frameFrom.transform = formatTranslate(params.direction, params.offset)\n      frameFrom.transformOrigin = params.origin\n      frameTo.transformOrigin = params.origin\n      easing = 'cubic-bezier(0,.9,.1,1)'\n      break\n  }\n  return [[frameFrom as Keyframe, frameTo as Keyframe], {\n    easing,\n    duration: params.duration,\n    iterations: 1\n  }]\n}\n","export type Maybe<T> = T | undefined\n\nexport type ParamsBuilder = (initial: AnimationParams) => AnimationParams\n\nexport enum AnimationDirection {\n  top = 'top',\n  right = 'right',\n  bottom = 'bottom',\n  left = 'left'\n}\n\nexport type AnimationEffect = 'zoom' | 'helix' | 'slide' | 'relax'\n\nexport interface AnimationParams {\n  direction: AnimationDirection\n  duration: number\n  effect: AnimationEffect\n  expose: boolean\n  delay: number\n  scale: number\n  await: string\n  origin: AnimationDirection\n  offset: number\n  spin: boolean\n  spinSize: number\n  continue: boolean\n}\n","/**\n * Checks if image is loaded\n */\nexport async function imageLoaded (url: string): Promise<boolean> {\n  return await new Promise<boolean>((resolve) => {\n    const image = new Image()\n    image.onload = () => { resolve(true) }\n    image.onerror = () => { resolve(false) }\n    image.src = url\n  })\n}\n\nexport async function sleep (ms: number): Promise<void> {\n  await new Promise(resolve => setTimeout(resolve, ms))\n}\n","import {\n  AnimationDirection,\n  type AnimationParams,\n  type AnimationEffect,\n  type Maybe\n} from '../types'\n\nfunction directionFromData (data: DOMStringMap): AnimationDirection {\n  if (data.left) {\n    return AnimationDirection.left\n  } else if (data.right) {\n    return AnimationDirection.right\n  } else if (data.bottom) {\n    return AnimationDirection.bottom\n  } else {\n    return AnimationDirection.top\n  }\n}\n\nconst supportsExpose = 'IntersectionObserver' in window\n\nfunction safeParseInt (value: Maybe<string>, fallback = 0): number {\n  if (!value) {\n    return fallback\n  }\n  return parseInt(value, 10)\n}\n\nfunction safeParseFloat (value: Maybe<string>, fallback = 0): number {\n  if (!value) {\n    return fallback\n  }\n  return parseFloat(value)\n}\n\nfunction offsetFromData (data: DOMStringMap, fallback: number): number {\n  if (data.up) {\n    return safeParseInt(data.up)\n  } else if (data.left) {\n    return safeParseInt(data.left)\n  } else if (data.right) {\n    return safeParseInt(data.right)\n  } else if (data.bottom) {\n    return safeParseInt(data.bottom)\n  } else {\n    return fallback\n  }\n}\n\nfunction isPropertyExists (data: DOMStringMap, propName: string): boolean {\n  return (data as Record<string, string>).hasOwnProperty(propName)\n}\n\n/**\n* Transform dataset to HoneyNode parameters\n*/\nexport function parseDataParams (data: DOMStringMap): AnimationParams {\n  return {\n    // Appearance\n    effect: data.effect ? data.effect as unknown as AnimationEffect : 'slide',\n    direction: directionFromData(data),\n    origin: data.origin ? data.origin as AnimationDirection : AnimationDirection.top,\n    scale: safeParseFloat(data.scale, 0.87),\n    offset: offsetFromData(data, 32),\n    // Timings\n    duration: safeParseInt(data.duration, 640),\n    delay: safeParseInt(data.delay, 0),\n    // Awaits\n    expose: supportsExpose && isPropertyExists(data, 'expose'),\n    await: data.await ?? '',\n    continue: isPropertyExists(data, 'continue'),\n    // Spinner\n    spin: isPropertyExists(data, 'spin'),\n    spinSize: safeParseInt(data.spinSize, 24)\n  }\n}\n"],"names":["$52295b791b26e783$export$67ee29bab3792d4c","$2b39f1b2c2ebbf14$var$ElementState","$55f2ecb58225d6c7$export$addbe116538b3a81","$55f2ecb58225d6c7$export$53ca4621bbab9a","$246fbb55d9950158$export$f38e328102e06d7a","constructor","registry","rootMargin","observer","IntersectionObserver","entries","forEach","entry","element","getElement","target","isIntersecting","visible","show","then","threshold","clear","disconnect","add","observe","node","$ad0cfced2ca048cc$var$CSS_URL_RE","$fc7df41ca676b6cd$export$f74e931a0704c83b","url","Promise","resolve","image","Image","onload","onerror","src","$fc7df41ca676b6cd$export$e772c8ff12451969","ms","setTimeout","AnimationDirection","$ddc2cd96f657353f$var$supportsExpose","window","$ddc2cd96f657353f$var$safeParseInt","value","fallback","parseInt","$ddc2cd96f657353f$var$isPropertyExists","data","propName","hasOwnProperty","ElementState","$2b39f1b2c2ebbf14$export$8e88a0ad50abe74","images","state","Hidden","params","effect","direction","left","right","bottom","top","origin","scale","$ddc2cd96f657353f$var$safeParseFloat","parseFloat","offset","up","duration","delay","expose","await","continue","spin","spinSize","dataset","nodes","Array","from","querySelectorAll","push","i","length","tagName","$ad0cfced2ca048cc$var$getBackgroundImage","style","getComputedStyle","props","background","backgroundImage","$ad0cfced2ca048cc$var$getUrl","match","setAwaited","el","awaitedElement","ready","whenVisible","imagesLoaded","requests","map","loaded","all","some","v","hide","classList","remove","showSpinner","spinner","size","spinNode","document","createElement","className","innerHTML","doc","documentElement","rect","getBoundingClientRect","$5d01392e25f70b57$export$d63a6b7859608045","keys","Object","key","position","scrollTop","scrollLeft","width","height","display","alignItems","justifyContent","transition","body","appendChild","opacity","Exposing","requestAnimationFrame","removeChild","frames","options","easing","transformString","frameFrom","frameTo","transform","transformOrigin","iterations","animation","animate","finished","Exposed","$8e7affb4d39ee142$var$registry","has","storage","get","set","getAwaited","getByIndex","getElementById","undefined","Error","Map","$8e7affb4d39ee142$var$observer","$8e7affb4d39ee142$export$e3607ec2d7a891c4","prepareParams","animations","previous","$8e7affb4d39ee142$export$aad8462122ac592b","spins","reset"],"version":3,"file":"index.esm.js.map"}